.\" Copyright Â© 2020 Johnothan King. All rights reserved.
.\"
.\" Permission is hereby granted, free of charge, to any person obtaining a copy
.\" of this software and associated documentation files (the "Software"), to deal
.\" in the Software without restriction, including without limitation the rights
.\" to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
.\" copies of the Software, and to permit persons to whom the Software is
.\" furnished to do so, subject to the following conditions:
.\"
.\" The above copyright notice and this permission notice shall be included in all
.\" copies or substantial portions of the Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
.\" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
.\" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
.\" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
.\" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
.\" OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
.\" SOFTWARE.
.\"
.Dd April 10, 2020
.Dt TIMELIM 1
.Os
.Sh NAME
.Nm timelim
.Nd A program capable of setting ridiculous time limits
.Sh SYNOPSIS
.Nm
.Op Fl jsSvV
number[suffix]
.Sh DESCRIPTION
.Nm Timelim
is a
.Nm POSIX-compliant
implementation of the
.Nm sleep(1)
utility capable of setting time limits as short as a
few nanoseconds or as long as multiple centuries.
.Nm Timelim
will accept floating point arguments, but they will be
processed as integers internally with the decimal being used as a delimiter.

.Nm Timelim
accepts the following flags:

.Nm -j, --julian
This causes
.Nm Timelim
to use the Julian calendar instead of the Gregorian calendar.

.Nm -s, --signal
.Nm Timelim
will function as normal until it receives a signal defined by the POSIX standard,
which will then cause it finish execution with an exit status of zero.
If no argument is given or the argument is zero,
.Nm Timelim
will wait indefinitely wait for a signal without timing out.
This option was implemented for compatibility with the
.Nm ksh(1)
sleep builtin.

.Nm -S, --sidereal
This causes
.Nm Timelim
to use the Sidereal year instead of the Gregorian year.

.Nm -v, --verbose
This will cause
.Nm Timelim
to print out the number of seconds and nanoseconds it will wait for,
then output `Time's up!` when finished.

.Nm -V, --version
Prints the version of
.Nm Timelim
currently installed on the machine.

.Nm -?, --help
Shows usage information regarding
.Nm Timelim.

.Nm Timelim
will also accept the following suffixes appended to arguments:

.Nm n
Denotes nanoseconds, cannot be a floating point argument.

.Nm s
Denotes seconds, same as adding no suffix.

.Nm m
Denotes minutes (60 seconds)

.Nm h
Denotes hours (60 minutes)

.Nm d
Denotes days (24 hours)

.Nm w
Denotes weeks (7 days)

.Nm f
Denotes fortnights (2 weeks)

.Nm o
Denotes months (30 days or 2629800 seconds)

.Nm y
Denotes years (defaults to 31556952 seconds, passing
--sidereal changes this to 31558150 seconds, passing
--julian changes this to 31557600 seconds)

.Nm D
Denotes decades (10 years)

.Nm c
Denotes centuries (100 years)

.Nm M
Denotes millennia (1000 years)

If
.Nm Timelim
is sent SIGPWR or SIGINFO, it will show the user how
many seconds and nanoseconds are remaining until
.Nm Timelim
finishes execution.
.Sh EXAMPLES
Sleep for 2 seconds with verbose output (when run as sleep):
sleep -v 2 or sleep -v 2s

Sleep for 4 months, 1 fortnight, 2 weeks and 2000 nanoseconds (with verbose output, suffixes):
timelim --verbose 4m 1f 2w 2000n

Sleep for 7 millennia and a month, using the Julian calendar:
timelim -j 7M 1o

Set a time limit to last a minute unless a signal is received:
timelim -s 1m or ./timelim -s 60s

Set a time limit to last one sidereal year and three weeks:
timelim -S 1y 3w

Set a time limit to only last 24000 nanoseconds:
timelim 24000n

Set a time limit to last 3.6 centuries, 2.4 decades and 4.1 months:
timelim 3.6c 2.4D 4.1o
.Sh SEE ALSO
nanosleep(2), sleep(3), signal(7), ksh(1)
.Sh AUTHOR
Johnothan King
